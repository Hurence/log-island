{
  "swagger" : "2.0",
  "info" : {
    "description" : "**The Logisland REST API for third party applications.**\n\nThe API should be implemented by a third party application and logisland will regularly poll this endpoint in order to:\n- Ask for configuration changes to be triggered.\n- Report the latest configuration applied (to ease up resynchronization and business continuity).\n\n*As a general rule, the changes will be triggered if the **lastUpdated** field of the object you are going to modify is fresher than the one known by logisland.*\n\nIn terms of API, two degrees of freedom are possible:\n- **Dataflow**:\n\n    A dataflow is a set of services and streams allowing a data flowing from one or more sources, being transformed and reach one or more destinations (sinks).\n\n    Act at dataflow level if you want to:\n\n    - Add/Remove any streaming endpoint\n    - Change any active stream configuration (e.g. kafka topic)\n    - Create/Remote/Modify any service\n\n\n- **Pipeline**:\n\n    A pipeline is a processing chain acting on a data flowing point-to-point.\n\n    The api gives you the possibility to have a finer-grained control of what is going of any stream pipeline without perturbing the stream itself.\n    This means that the processor chain will be dynamically reconfigured without the need of stopping the stream and reconfigure the whole dataflow.\n\n    Act at pipeline level if you want to:\n\n    - Add/Remove processors in the pipeline\n\n    - Change any processor configuration\n\n    *Please note that if you need to add/remove controller services you must act your changes at dataflow level.*",
    "version" : "v1",
    "title" : "Logisland standard API",
    "contact" : {
      "name" : "Hurence",
      "email" : "support@hurence.com"
    }
  },
  "host" : "localhost:8081",
  "schemes" : [ "http", "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/dataflows/{dataflowName}" : {
      "get" : {
        "tags" : [ "dataflow" ],
        "summary" : "Retrieves the configuration for a specified dataflow",
        "description" : "A dataflow is a set of services and streams allowing a data flowing from one or more sources, being transformed and reach one or more destinations (sinks).\nLogisland will call this endpoint to know which configuration should be run.\n\n This endpoint also supports HTTP caching (Last-Updated, If-Modified-Since) as per RFC 7232, section 3.3",
        "operationId" : "pollDataflowConfiguration",
        "parameters" : [ {
          "name" : "dataflowName",
          "in" : "path",
          "description" : "the dataflow name (aka the logisland job name)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "If-Modified-Since",
          "in" : "header",
          "description" : "Timestamp of last response",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Return the dataflow configuration.\nOn logisland side, the following will happen:\n- At dataflow level:\n\n  - Fully reconfigure a dataflow (stop and then start) if nothing is running (initial state) or if lastUpdated is fresher than the one of the already running dataflow.\n\n    In this case be aware that old stream and services will be destroyed and\n    new ones will be created.\n\n  - Do nothing otherwise (keep running the active dataflow)\n\n- At pipeline level:\n\n  - The processor chain will be fully reconfigured if and only if the pipeline lastUpdated is fresher than the lastUpdated known by the system.\n\n  In any case the stream is never stopped.",
            "schema" : {
              "$ref" : "#/definitions/DataFlow"
            },
            "examples" : {
              "A single stream dataflow" : {
                "lastModified" : "1983-06-04T10:00.000Z",
                "modificationReason" : "Index Apache Logs again",
                "services" : [ {
                  "component" : "com.hurence.logisland.service.elasticsearch.Elasticsearch_5_4_0_ClientService",
                  "documentation" : "elasticsearch service to sink records",
                  "name" : "elasticsearch_service",
                  "config" : [ {
                    "key" : "hosts",
                    "value" : "eshost:9300"
                  }, {
                    "key" : "cluster.name",
                    "value" : "escluster"
                  } ]
                } ],
                "streams" : [ {
                  "name" : "kafka_in",
                  "component" : "com.hurence.logisland.stream.spark.KafkaRecordStreamParallelProcessing",
                  "config" : [ {
                    "key" : "kafka.input.topics",
                    "value" : "logisland_raw"
                  }, {
                    "key" : "kafka.output.topics",
                    "value" : "logisland_events"
                  }, {
                    "key" : "kafka.error.topics",
                    "value" : "logisland_errors"
                  }, {
                    "key" : "kafka.input.topics.serializer",
                    "value" : "none"
                  }, {
                    "key" : "kafka.output.topics.serializer",
                    "value" : "com.hurence.logisland.serializer.KryoSerializer"
                  }, {
                    "key" : "kafka.error.topics.serializer",
                    "value" : "com.hurence.logisland.serializer.JsonSerializer"
                  }, {
                    "key" : "kafka.metadata.broker.list",
                    "value" : "sandbox:9092"
                  }, {
                    "key" : "kafka.zookeeper.quorum",
                    "value" : "sandbox:2181"
                  }, {
                    "key" : "kafka.topic.autoCreate",
                    "value" : "true"
                  }, {
                    "key" : "kafka.topic.default.partitions",
                    "value" : "4"
                  }, {
                    "key" : "kafka.topic.default.replicationFactor",
                    "value" : "1",
                    "pipeline" : {
                      "lastModified" : "1983-06-04T10:00.000Z",
                      "modificationReason" : "Initial configuration",
                      "processors" : [ {
                        "component" : "com.hurence.logisland.processor.SplitText",
                        "name" : "apache_parser",
                        "documentation" : "parse apache logs with a regexp",
                        "config" : [ {
                          "key" : "record.type",
                          "value" : "apache_log"
                        }, {
                          "key" : "value.regex",
                          "value" : "(\\S+)\\s+(\\S+)\\s+(\\S+)\\s+\\[([\\w:\\/]+\\s[+\\-]\\d{4})\\]\\s+\"(\\S+)\\s+(\\S+)\\s*(\\S*)\"\\s+(\\S+)\\s+(\\S+)"
                        }, {
                          "key" : "value.fields",
                          "value" : "src_ip,identd,user,record_time,http_method,http_query,http_version,http_status,bytes_out"
                        } ]
                      }, {
                        "component" : "com.hurence.logisland.processor.elasticsearch.BulkAddElasticsearch",
                        "documentation" : "a processor that indexes processed events in elasticsearch",
                        "name" : "es_publisher",
                        "config" : [ {
                          "key" : "elasticsearch.client.service",
                          "value" : "elasticsearch_service"
                        }, {
                          "key" : "default.index",
                          "value" : "logisland"
                        }, {
                          "key" : "default.type",
                          "value" : "event"
                        }, {
                          "key" : "timebased.index",
                          "value" : "yesterday"
                        }, {
                          "key" : "es.index.field",
                          "value" : "search_index"
                        }, {
                          "key" : "es.type.field",
                          "value" : "record_type"
                        } ]
                      } ]
                    }
                  } ]
                } ]
              }
            },
            "headers" : {
              "Last-Updated" : {
                "type" : "string",
                "description" : "Should be used for subsequent requests as If-Modified-Since request header."
              }
            }
          },
          "304" : {
            "description" : "Nothing has been modified since the last call.\n\nIn this case the body content will be completely ignored\n(hence the server can answer with an empty body to save network and resources).\n"
          },
          "404" : {
            "description" : "Not found (the server probably does not handle this dataflow)"
          },
          "default" : {
            "description" : "Unexpected error"
          }
        },
        "x-contentType" : "application/json",
        "x-accepts" : "application/json"
      },
      "post" : {
        "tags" : [ "dataflow" ],
        "summary" : "Push the configuration of running dataflows.",
        "description" : "In order to ensure business continuity, Logisland will contact the third party application in order to push a snapshot of the current configuration.\nThe endpoint will be called:\n- On a regular basis (according to logisland configuration).\n- Each time the a dataflow or a pipeline configuration change has been applied.\n\nThis service can be seen as well as a liveness ping.",
        "operationId" : "notifyDataflowConfiguration",
        "parameters" : [ {
          "name" : "dataflowName",
          "in" : "path",
          "description" : "the dataflow name (aka the logisland job name)",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "logisland job id (aka the engine name)",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "dataflow",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/DataFlow"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "The server should return HTTP 200 OK.\nBy the way, the response is ignored by Logisland since the operation\nhas a *fire and forget* nature.\n"
          }
        },
        "x-contentType" : "application/json",
        "x-accepts" : "application/json"
      }
    }
  },
  "definitions" : {
    "Property" : {
      "type" : "object",
      "required" : [ "key", "value" ],
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "default" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "Component" : {
      "type" : "object",
      "required" : [ "component", "name" ],
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "component" : {
          "type" : "string"
        },
        "documentation" : {
          "type" : "string"
        },
        "config" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Property"
          }
        }
      }
    },
    "Service" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Component"
      } ],
      "description" : "A logisland 'controller service'."
    },
    "Processor" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Component"
      } ],
      "description" : "A logisland 'processor'."
    },
    "Versioned" : {
      "type" : "object",
      "required" : [ "lastModified" ],
      "properties" : {
        "lastModified" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "the last modified timestamp of this pipeline (used to trigger changes)."
        },
        "modificationReason" : {
          "type" : "string",
          "description" : "Can be used to document latest changeset."
        }
      },
      "description" : "a versioned component"
    },
    "Pipeline" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Versioned"
      }, {
        "properties" : {
          "processors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/Processor"
            }
          }
        }
      } ],
      "description" : "Tracks stream processing pipeline configuration"
    },
    "Stream" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Component"
      }, {
        "properties" : {
          "pipeline" : {
            "$ref" : "#/definitions/Pipeline"
          }
        }
      } ]
    },
    "DataFlow" : {
      "allOf" : [ {
        "$ref" : "#/definitions/Versioned"
      }, {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "services" : {
            "type" : "array",
            "description" : "The service controllers.",
            "items" : {
              "$ref" : "#/definitions/Service"
            }
          },
          "streams" : {
            "type" : "array",
            "description" : "The engine properties.",
            "items" : {
              "$ref" : "#/definitions/Stream"
            }
          }
        }
      } ],
      "description" : "A streaming pipeline."
    }
  }
}